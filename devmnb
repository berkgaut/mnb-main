#!/usr/bin/env bash
# Startup script to run mnb outside of container (requires python3)

set -o errexit
set -o pipefail
set -o nounset

# Determine directory where devmnb is located (mnb workspace root)
ROOT_ABS_PATH=$(cd -- "$(dirname -- "$0")" > /dev/null 2>&1 && pwd)

# Determine the location of devmnb script (mnb-main source directory)
# In this case we resolve symlinks to the script, but with only one level of indirection
# (this is because macos readlink does not have -f option)
THIS_SCRIPT=$(readlink -- "$0" || echo "$0")
MNB_DIR=$(cd -P -- "$(dirname -- "$THIS_SCRIPT")" > /dev/null 2>&1 && pwd -P)
echo "MNB_DIR=${MNB_DIR}"
SRC_DIR="${MNB_DIR}/src"

# python or python3?
if which python3 > /dev/null
then
  PYTHON=python3
elif python -c 'import sys; exit(0 if sys.version_info[0]==3 else 1)'
then
  PYTHON=python
else
  echo "Python 3 is required"
  exit 1
fi
echo "PYTHON=${PYTHON}"

# Create virtualenv if it does not exist
VENV_DIR="${MNB_DIR}/venv"
if [ ! -d "${VENV_DIR}" ]
then
  echo "Create virtualenv in ${VENV_DIR}"
  mkdir "$VENV_DIR"
  ${PYTHON} -m venv "${VENV_DIR}"
fi

if [ -f "${VENV_DIR}/bin/activate" ]
then
    VENV_ACTIVATE="${VENV_DIR}/bin/activate"
elif [ -f  "${VENV_DIR}/Scripts/activate" ] # MSYS Windows
then
    VENV_ACTIVATE="${VENV_DIR}/Scripts/activate"
elif [ -f "${VENV_DIR}/usr/local/bin/activate" ] # macOS
then
    VENV_ACTIVATE="${VENV_DIR}/usr/local/bin/activate"
else
    echo "Could not find virtualenv activation script in directory $VENV_DIR"
    exit 1
fi

echo "Activate virtualenv via ${VENV_ACTIVATE}"
source "${VENV_ACTIVATE}"

echo "Install requirements"
${PYTHON} -m pip install -r "${SRC_DIR}/mnb-core/requirements.txt"

# The rest of this script is similar to mnb
if [ -S /var/run/docker.sock ]
then
	export DOCKER_HOST=
else
	export DOCKER_HOST=tcp://localhost:2375
fi
echo "DOCKER_HOST=${DOCKER_HOST}"

export PYTHONPATH="${SRC_DIR}/mnb-core:${SRC_DIR}/mnb-spec"
echo "PYTHONPATH=${PYTHONPATH}"

export MNB_LIB="${SRC_DIR}/mnb-core/lib"

python3 "${SRC_DIR}/mnb-core/main.py" --dev-mode --rootabspath "${ROOT_ABS_PATH}" "$@"
